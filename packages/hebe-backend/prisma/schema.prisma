// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  phone     Int?
  firstName String?
  lastName  String?
  address   String?
  orders    Orders[]
  cart      Cart[]
  roles     Role     @default(USER)
}

model Orders {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt //for delivery status later

  userId          String
  user            Users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  name            String
  phone           Int
  phone2          Int?
  shippingAddress String
  paynmentId      String
  status          Boolean @default(false)
  products        Json
  totalAmount     Decimal
}

model Cart {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId       String
  productQuantity Int    @default(1)
  userId          String
  // products        Products[] @relation()
  user            Users  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id       Int     @id @default(autoincrement())
  name     String     @unique
  products Products[]
  // PostCategory PostCategory[]
}

model Products {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productName        String
  productDescription String
  productPrice       Decimal
  productImg         String
  categoryId         Int?
  category           Category? @relation(fields: [categoryId], references: [id])
}

// model ProductCategory {
//   id         Int   @default(autoincrement())
//   // PostCategory PostCategory[]
//   Products   Products @relation(fields: [productsId], references: [id])
//   Category   Category @relation(fields: [categoryId], references: [id])
//   categoryId String 
//   productsId String

//   @@id([productsId, categoryId])
// }

enum Role {
  USER
  MANAGER
  ADMIN
}

// model PostCategory {
//   categoryId Int      @map("category_id")
//   eid     Int      @map("post_id")
//   category   Category @relation(fields: [categoryId], references: [id])
//   products   Products @relation(fields: [id], references: [eid])

//   @@id([categoryId, eid])
//   @@map("post_category")
// }
